Semaphore(信号)
此类的主要作用是限制线程并发的数量

CPU把时间片分配给不同的线程对象，在分配过程中，需要在上下文中来回切换，切换过程需要耗费一定的时间，
如果不限制线程并发数量，则CPU资源很快就被耗尽，每个线程执行的任务都相当缓慢。


Semaphore类在构造时，可以设置“许可(permits)”，表示最大的线程并发数量，每次启动一个线程，许可值减一，该类通过
“减法”操作来保证并发线程数量不超过许可。

通常该类保证程序在执行过程中，acquire()方法和release()方法之间的代码的最大并发线程数量为permits个。
当permits=1时，则相当于在两个方法之间的代码上加了同步关键字(synchronized)，但性能比同步关键字要好
当permits>1时，则同一时间点，可能会有多个线程执行两个方法之间的代码，因此，线程不安全，会导致脏读



Exchanger:在两个线程之间传递数据


