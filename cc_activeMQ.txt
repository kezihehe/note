JMS(Java Message Service)java消息服务，是JavaEE中的一个技术。

JMS规范
JMS中定义了Java中访问消息中间件的接口，但是并没有给予实现。

JMS消息的组成：
(1) 消息头：每个消息头字段都有相应的getter和setter方法
(2) 消息属性：如果需要除消息头以外的字段时，可以使用消息属性
(3) 消息体：封装具体消息数据

JMS provider:消息生产者，创建和发送JMS消息的客户端应用
JMS consumer:消息消费者，接收和处理JMS消息的客户端应用

消息消费的两种方式：
(1) 同步消费:通过调用消费者的receive()方法从目的地中显示提取消息进行处理，
receive方法可以一直阻塞到消息到达。
(2) 异步消费:客户端可以为消费者注册一个消息监听器，以定义在消息到达时所采取
的动作。

JMS domains:消息传递域，JMS规范中定义了两种消息传递域：
(1) 点对点:point-to-point,即PTP
(2) 发布/订阅:publish/subscribe，简写为pub/sub

点对点消息传递域的特点：
(1) 每个消息只能有一个消费者
(2) 消息的生产者和消费者之间没有时间上的相关性。无论消费者在生产者发送消息的时候，
是否处于运行状态，它都可以提取消息。
注意：一个队列可以有多个消费者，但是一个消息只能被一个消费者消费。


发布/订阅消息传递域的特点：
(1) 每个消息可以有多个消费者
(2) 生产者和消费者之间有时间上的相关性。订阅一个主题的消费者只能消费自它订阅之后发布
的消息。JMS规范允许客户端创建持久订阅，这在一定程度上放松了时间上的相关性要求。
持久订阅允许消费者在他未处于激活状态时发送消息。

JMS消息体：JMS API定义了5种消息格式，也叫做消息类型，可以使用不同形式发送接收数据，
并可以兼容现有的消息格式。
TextMessage
MapMessage
BytesMessage
StreamMessage
ObjectMessage

消息属性:包括三种类型
(1) 应用程序设置和添加的属性
message.setStringProperty(key,value);

(2) JMS定义的属性
使用JMSX作为属性名的前缀
connection.getMetaData().getJMSXPropertyNames()返回所有连接支持的JMSX的属性名字
(3) JMS供应商特定的属性


消息接收确认
JMS消息只有在被确认之后，才认为已经被成功消费了。消息的成功消费通常包含
三个阶段：客户接收消息、客户处理消息、消息被确认。
在事务性会话中，当一个事务被提交的时候，确认自动发生。在非事务性会话中，
消息何时被确认取决于创建会话时的应答模式(acknowledgment mode)。该参数有
三个可选值：
Session.AUTO_ACKNOWLEDGE:当客户成功的从receive方法返回的时候，或者从
MessageListener.onMessage方法成功返回的时候，会话自动确认客户收到的消息。
Session.CLIENT_ACKNOWLEDGE:客户端通过调用消息的acknowledge方法确认消息。
需要注意的是，在这种模式中，确认实在会话层上进行，确认一个被消费的消息将
自动确认所有已被会话消费的消息。例如如果一个消费者消费了10个消息，然后确认
第5个消息，那么所有10个消息都被确认。
Session.DUPS_ACKNOWLEDGE:该选择只是会话迟钝的确认消息的提交。如果JMS provider
失败，那么可能会导致一些重复的消息。如果是重复的消息，那么JMS provider必须把
消息头的JMSRedelivered字段设置为true。









